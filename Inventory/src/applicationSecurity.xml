<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<global-method-security secured-annotations="enabled"/>
	
    <http auto-config="true" access-denied-page="/WEB-INF/jsp/error/403.jsp">
    	
    	<intercept-url pattern="/master/admin/**"						access="ROLE_SA, ROLE_SUPER"/>    	
    	<intercept-url pattern="/master/user/**" 						access="ROLE_USER, ROLE_SUPER"/>
    	
    	<intercept-url pattern="/resources/**" filters="none"/>
        <intercept-url pattern="/**" 		access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        
        <!--  set custom login page (override generated login page by Spring Security) -->
        <form-login login-page="/login" 
        	default-target-url="/master/menu/"
        	authentication-success-handler-ref="authenticationSuccessHandler"
        	authentication-failure-handler-ref="authenticationFailureHandler"/>
        
        <logout logout-success-url="/"/>
        
        <session-management>
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
        </session-management>
    </http>
    
    <authentication-manager>
    	<authentication-provider>
    	
	    	<jdbc-user-service data-source-ref="dataSource"
    			users-by-username-query="select id as username, password, enable from user where id = ?"
    			authorities-by-username-query="select users_id as username, roles_id as authorities from user_role where users_id = ?"/>
	    	 
	        <password-encoder hash="md5"/> <!-- changing password-encoder configuration should also update encodePassword method at SpringSecurityUtil -->
	        
		</authentication-provider>
    </authentication-manager>
    
</beans:beans>